name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Packages
      run: |
        sudo apt-get install -y libfftw3-bin libfftw3-dev libeigen3-dev
        sudo python3 -m pip install numpy
      
    - name: Clone googletest
      run: cd ${{github.workspace}}/libsakura/ && git clone https://github.com/google/googletest.git && cd googletest && git checkout release-1.8.0 && cd .. && ln -s googletest/googletest gtest

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cd ${{github.workspace}}/libsakura/ && ls && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_DOC=OFF -DNUMPY_INCLUDE_DIR=$(python3 -c "import numpy; print(numpy.get_include())")

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/libsakura/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make testInitRun
      
