
/* Drop Indexes */

DROP INDEX IF EXISTS IDX_POINTING_TIME;



/* Drop Tables */

DROP TABLE IF EXISTS FEED_RECEPTOR;
DROP TABLE IF EXISTS FREQ_OFFSET;
DROP TABLE IF EXISTS SYSCAL;
DROP TABLE IF EXISTS FEED;
DROP TABLE IF EXISTS POINTING;
DROP TABLE IF EXISTS WEATHER;
DROP TABLE IF EXISTS ANTENNA;
DROP TABLE IF EXISTS COLUMN_KEYWORD;
DROP TABLE IF EXISTS DATA_DESCRIPTION;
DROP TABLE IF EXISTS DOPPLER;
DROP TABLE IF EXISTS FIELD_POLY;
DROP TABLE IF EXISTS FIELD;
DROP TABLE IF EXISTS OBSERVATION_LOG;
DROP TABLE IF EXISTS OBSERVATION_SCHEDULE;
DROP TABLE IF EXISTS OBSERVATION;
DROP TABLE IF EXISTS POLARIZATION;
DROP TABLE IF EXISTS PROCESSOR;
DROP TABLE IF EXISTS SOURCE_LINE_ATTR;
DROP TABLE IF EXISTS SOURCE_MODEL;
DROP TABLE IF EXISTS SOURCE;
DROP TABLE IF EXISTS SPECTRAL_WINDOW_ASSOC;
DROP TABLE IF EXISTS SPECTRAL_WINDOW;
DROP TABLE IF EXISTS STATE;
DROP TABLE IF EXISTS TABLE_KEYWORD;




/* Create Tables */

CREATE TABLE ANTENNA
(
	ANTENNA_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	NAME TEXT NOT NULL,
	STATION TEXT NOT NULL,
	ANTENNA_TYPE TEXT NOT NULL,
	MOUNT TEXT NOT NULL,
	POSITIONX REAL NOT NULL,
	POSITIONY REAL NOT NULL,
	POSITIONZ REAL NOT NULL,
	OFFSETX REAL NOT NULL,
	OFFSETY REAL NOT NULL,
	OFFSETZ REAL NOT NULL,
	DISH_DIAMETER REAL NOT NULL,
	ORBIT_ID INTEGER DEFAULT NULL,
	-- BLOB
	MEAN_ORBIT BLOB DEFAULT NULL,
	PHASED_ARRAY_ID INTEGER DEFAULT NULL,
	-- bool
	FLAG_ROW INTEGER NOT NULL
);


CREATE TABLE COLUMN_KEYWORD
(
	TABLE_NAME TEXT NOT NULL,
	COLUMN_NAME TEXT NOT NULL,
	KEYWORD TEXT NOT NULL,
	-- any type
	VALUE BLOB DEFAULT NULL,
	CONSTRAINT COLUMN_KEYWORD_PKEY UNIQUE (TABLE_NAME, COLUMN_NAME, KEYWORD)
);


CREATE TABLE POLARIZATION
(
	POLARIZATION_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	NUM_CORR INTEGER NOT NULL,
	-- BLOB
	CORR_TYPE BLOB NOT NULL,
	-- BLOB
	CORR_PRODUCT BLOB NOT NULL,
	-- bool
	FLAG_ROW INTEGER NOT NULL
);


CREATE TABLE SPECTRAL_WINDOW
(
	SPECTRAL_WINDOW_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	NUM_CHAN INTEGER NOT NULL,
	NAME TEXT NOT NULL,
	REF_FREQUENCY REAL NOT NULL,
	-- BLOB
	CHAN_FREQ BLOB NOT NULL,
	-- BLOB
	CHAN_WIDTH BLOB NOT NULL,
	MEAS_FREQ_REF INTEGER NOT NULL,
	-- BLOB
	EFFECTIVE_BW BLOB NOT NULL,
	-- BLOB
	RESOLUTION BLOB NOT NULL,
	TOTAL_BANDWIDTH REAL NOT NULL,
	NET_SIDEBAND INTEGER NOT NULL,
	BBC_NO INTEGER DEFAULT NULL,
	BBC_SIDEBAND INTEGER DEFAULT NULL,
	IF_CONV_CHAIN INTEGER NOT NULL,
	RECEIVER_ID INTEGER DEFAULT NULL,
	FREQ_GROUP INTEGER NOT NULL,
	FREQ_GROUP_NAME TEXT NOT NULL,
	DOPPLER_ID INTEGER DEFAULT NULL,
	-- bool
	FLAG_ROW INTEGER NOT NULL
);


CREATE TABLE DATA_DESCRIPTION
(
	DATA_DESC_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	SPECTRAL_WINDOW_ID INTEGER NOT NULL,
	POLARIZATION_ID INTEGER NOT NULL,
	LAG_ID INTEGER DEFAULT NULL,
	-- bool
	FLAG_ROW INTEGER NOT NULL,
	FOREIGN KEY (POLARIZATION_ID)
	REFERENCES POLARIZATION (POLARIZATION_ID),
	FOREIGN KEY (SPECTRAL_WINDOW_ID)
	REFERENCES SPECTRAL_WINDOW (SPECTRAL_WINDOW_ID)
);


CREATE TABLE SOURCE
(
	SOURCE_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	TIME REAL NOT NULL,
	INTERVAL REAL NOT NULL,
	SPECTRAL_WINDOW_ID INTEGER NOT NULL,
	NUM_LINES INTEGER NOT NULL,
	NAME TEXT NOT NULL,
	CALIBRATION_GROUP INTEGER NOT NULL,
	CODE TEXT NOT NULL,
	DIRECTIONX REAL NOT NULL,
	DIRECTIONY REAL NOT NULL,
	POSITIONX REAL,
	POSITIONY REAL,
	POSITIONZ REAL,
	PROPER_MOTIONX REAL NOT NULL,
	PROPER_MOTIONY REAL NOT NULL,
	PULSAR_ID INTEGER,
	FOREIGN KEY (SPECTRAL_WINDOW_ID)
	REFERENCES SPECTRAL_WINDOW (SPECTRAL_WINDOW_ID)
);


CREATE TABLE DOPPLER
(
	DOPPLER_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	SOURCE_ID INTEGER NOT NULL,
	TRANSITION_ID INTEGER NOT NULL,
	VELDEF REAL NOT NULL,
	FOREIGN KEY (SOURCE_ID)
	REFERENCES SOURCE (SOURCE_ID)
);


CREATE TABLE FEED
(
	FEED_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	ANTENNA_ID INTEGER NOT NULL,
	SPECTRAL_WINDOW_ID INTEGER NOT NULL,
	TIME REAL NOT NULL,
	INTERVAL REAL NOT NULL,
	NUM_RECEPTORS INTEGER NOT NULL,
	BEAM_ID INTEGER NOT NULL,
	FOCUS_LENGTH REAL DEFAULT NULL,
	PHASED_FEED_ID INTEGER DEFAULT NULL,
	POSITIONX REAL NOT NULL,
	POSITIONY REAL NOT NULL,
	POSITIONZ REAL NOT NULL,
	FOREIGN KEY (ANTENNA_ID)
	REFERENCES ANTENNA (ANTENNA_ID),
	FOREIGN KEY (SPECTRAL_WINDOW_ID)
	REFERENCES SPECTRAL_WINDOW (SPECTRAL_WINDOW_ID)
);


CREATE TABLE FEED_RECEPTOR
(
	FEED_ID INTEGER NOT NULL,
	-- Starts with 0.
	IDX INTEGER NOT NULL,
	BEAM_OFFSETX REAL NOT NULL,
	BEAM_OFFSETY REAL NOT NULL,
	POLARIZATION_TYPE TEXT NOT NULL,
	-- BLOB
	POL_RESPONSE BLOB NOT NULL,
	RECEPTOR_ANGLE REAL NOT NULL,
	FOREIGN KEY (FEED_ID)
	REFERENCES FEED (FEED_ID)
);


CREATE TABLE FIELD
(
	FIELD_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	NAME TEXT NOT NULL,
	CODE TEXT NOT NULL,
	TIME REAL NOT NULL,
	NUM_POLY INTEGER NOT NULL,
	SOURCE_ID INTEGER NOT NULL,
	EPHEMERIS_ID INTEGER DEFAULT NULL,
	-- bool
	FLAG_ROW INTEGER NOT NULL,
	FOREIGN KEY (SOURCE_ID)
	REFERENCES SOURCE (SOURCE_ID)
);


CREATE TABLE FIELD_POLY
(
	FIELD_ID INTEGER NOT NULL,
	-- Starts with 0.
	IDX INTEGER NOT NULL,
	DELAY_DIRX REAL NOT NULL,
	DELAY_DIRY REAL NOT NULL,
	PHASE_DIRX REAL NOT NULL,
	PHASE_DIRY REAL NOT NULL,
	REFERENCE_DIRX REAL NOT NULL,
	REFERENCE_DIRY REAL NOT NULL,
	FOREIGN KEY (FIELD_ID)
	REFERENCES FIELD (FIELD_ID)
);




CREATE TABLE FREQ_OFFSET
(
	FREQ_OFFSET_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	ANTENNA1 INTEGER NOT NULL,
	ANTENNA2 INTEGER NOT NULL,
	FEED_ID INTEGER NOT NULL,
	SPECTRAL_WINDOW_ID INTEGER NOT NULL,
	TIME REAL NOT NULL,
	INTERVAL REAL NOT NULL,
	OFFSET REAL NOT NULL,
	FOREIGN KEY (ANTENNA1)
	REFERENCES ANTENNA (ANTENNA_ID),
	FOREIGN KEY (SPECTRAL_WINDOW_ID)
	REFERENCES SPECTRAL_WINDOW (SPECTRAL_WINDOW_ID),
	FOREIGN KEY (ANTENNA2)
	REFERENCES ANTENNA (ANTENNA_ID),
	FOREIGN KEY (FEED_ID)
	REFERENCES FEED (FEED_ID)
);








CREATE TABLE PROCESSOR
(
	PROCESSOR_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	PROCESSOR_TYPE TEXT NOT NULL,
	SUB_TYPE TEXT NOT NULL,
	TYPE_ID INTEGER NOT NULL,
	MODE_ID INTEGER NOT NULL,
	PASS_ID INTEGER,
	-- bool
	FLAG_ROW INTEGER NOT NULL
);


CREATE TABLE STATE
(
	STATE_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	-- bool
	SIG INTEGER NOT NULL,
	-- bool
	REF INTEGER NOT NULL,
	CAL REAL NOT NULL,
	LOAD REAL NOT NULL,
	SUB_SCAN INTEGER NOT NULL,
	OBS_MODE TEXT NOT NULL,
	-- bool
	FLAG_ROW INTEGER NOT NULL
);




CREATE TABLE MAIN_COORDINATE
(
	MAIN_ID INTEGER NOT NULL,
	AZ REAL NOT NULL,
	EL REAL NOT NULL,
	CX REAL NOT NULL,
	CY REAL NOT NULL,
	FOREIGN KEY (MAIN_ID)
	REFERENCES MAIN (MAIN_ID)
);


CREATE TABLE OBSERVATION
(
	OBSERVATION_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	TELESCOPE_NAME TEXT NOT NULL,
	TIME_RANGE_START REAL NOT NULL,
	TIME_RANGE_END REAL NOT NULL,
	OBSERVER TEXT NOT NULL,
	SCHEDULE_TYPE TEXT NOT NULL,
	PROJECT TEXT NOT NULL,
	RELEASE_DATE REAL NOT NULL,
	-- bool
	FLAG_ROW INTEGER NOT NULL
);


CREATE TABLE OBSERVATION_LOG
(
	OBSERVATION_ID INTEGER NOT NULL,
	-- Starts with 0.
	IDX INTEGER NOT NULL,
	LOG TEXT NOT NULL,
	FOREIGN KEY (OBSERVATION_ID)
	REFERENCES OBSERVATION (OBSERVATION_ID)
);


CREATE TABLE OBSERVATION_SCHEDULE
(
	OBSERVATION_ID INTEGER NOT NULL,
	-- Starts with 0.
	IDX INTEGER NOT NULL,
	SCHEDULE TEXT NOT NULL,
	FOREIGN KEY (OBSERVATION_ID)
	REFERENCES OBSERVATION (OBSERVATION_ID)
);


CREATE TABLE POINTING
(
	ANTENNA_ID INTEGER NOT NULL,
	TIME REAL NOT NULL,
	INTERVAL REAL NOT NULL,
	NAME TEXT NOT NULL,
	NUM_POLY INTEGER NOT NULL,
	TIME_ORIGIN REAL NOT NULL,
	-- BLOB
	DIRECTION BLOB NOT NULL,
	-- BLOB
	TARGET BLOB NOT NULL,
	-- BLOB
	POINTING_OFFSET NONE,
	-- BLOB
	SOURCE_OFFSET NONE,
	ENCODERX REAL,
	ENCODERY REAL,
	POINTING_MODEL_ID INTEGER,
	-- bool
	TRACKING INTEGER NOT NULL,
	-- bool
	ON_SOURCE INTEGER,
	-- bool
	OVER_THE_TOP INTEGER,
	FOREIGN KEY (ANTENNA_ID)
	REFERENCES ANTENNA (ANTENNA_ID)
);


CREATE TABLE SOURCE_LINE_ATTR
(
	SOURCE_ID INTEGER NOT NULL,
	-- Starts with 0
	IDX INTEGER NOT NULL,
	TRANSITION TEXT,
	REST_FREQUENCY REAL,
	SYSVEL REAL,
	FOREIGN KEY (SOURCE_ID)
	REFERENCES SOURCE (SOURCE_ID)
);


CREATE TABLE SOURCE_MODEL
(
	SOURCE_ID INTEGER NOT NULL,
	MODEL_KEY TEXT NOT NULL,
	-- Table?
	MODEL NONE,
	FOREIGN KEY (SOURCE_ID)
	REFERENCES SOURCE (SOURCE_ID)
);


CREATE TABLE SPECTRAL_WINDOW_ASSOC
(
	SPECTRAL_WINDOW_ID INTEGER NOT NULL,
	ASSOC_SPW_ID INTEGER NOT NULL,
	ASSOC_NATURE TEXT NOT NULL,
	FOREIGN KEY (SPECTRAL_WINDOW_ID)
	REFERENCES SPECTRAL_WINDOW (SPECTRAL_WINDOW_ID),
	FOREIGN KEY (ASSOC_SPW_ID)
	REFERENCES SPECTRAL_WINDOW (SPECTRAL_WINDOW_ID),
	CONSTRAINT SW_ASSOC_PK UNIQUE (SPECTRAL_WINDOW_ID, ASSOC_SPW_ID)
);


CREATE TABLE SYSCAL
(
	SYSCAL_ID INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	ANTENNA_ID INTEGER NOT NULL,
	FEED_ID INTEGER NOT NULL,
	SPECTRAL_WINDOW_ID INTEGER NOT NULL,
	TIME REAL NOT NULL,
	INTERVAL REAL NOT NULL,
	PHASE_DIFF REAL,
	-- BLOB
	TCAL NONE,
	-- BLOB
	TRX NONE,
	-- BLOB
	TSKY NONE,
	-- BLOB
	TSYS NONE,
	-- BLOB
	TANT NONE,
	-- BLOB
	TANT_TSYS NONE,
	-- BLOB
	TCAL_SPECTRUM NONE,
	-- BLOB
	TRX_SPECTRUM NONE,
	-- BLOB
	TSKY_SPECTRUM NONE,
	-- BLOB
	TSYS_SPECTRUM NONE,
	-- BLOB
	TANT_SPECTRUM NONE,
	-- BLOB
	TANT_TSYS_SPECTRUM NONE,
	-- bool
	PHASE_DIFF_FLAG INTEGER,
	-- bool
	TCAL_FLAG INTEGER,
	-- bool
	TRX_FLAG INTEGER,
	-- bool
	TSKY_FLAG INTEGER,
	-- bool
	TSYS_FLAG INTEGER,
	-- bool
	TANT_FLAG INTEGER,
	-- bool
	TANT_TSYS_FLAG INTEGER,
	FOREIGN KEY (SPECTRAL_WINDOW_ID)
	REFERENCES SPECTRAL_WINDOW (SPECTRAL_WINDOW_ID),
	FOREIGN KEY (ANTENNA_ID)
	REFERENCES ANTENNA (ANTENNA_ID),
	FOREIGN KEY (FEED_ID)
	REFERENCES FEED (FEED_ID)
);


CREATE TABLE TABLE_KEYWORD
(
	TABLE_NAME TEXT NOT NULL,
	KEYWORD TEXT NOT NULL,
	-- any type
	VALUE BLOB DEFAULT NULL,
	CONSTRAINT TABLE_KEYWORD_PKEY UNIQUE (TABLE_NAME, KEYWORD)
);


CREATE TABLE WEATHER
(
	ANTENNA_ID INTEGER NOT NULL,
	TIME REAL NOT NULL,
	INTERVAL REAL NOT NULL,
	H2O REAL,
	IONOS_ELECTRON REAL,
	PRESSURE REAL,
	REL_HUMIDITY REAL,
	TEMPERATURE REAL,
	DEW_POINT REAL,
	WIND_DIRECTION REAL,
	WIND_SPEED REAL,
	-- bool
	H2O_FLAG INTEGER,
	-- bool
	IONOS_ELECTRON_FLAG INTEGER,
	-- bool
	PRESSURE_FLAG INTEGER,
	-- bool
	REL_HUMIDITY_FLAG INTEGER,
	-- bool
	TEMPERATURE_FLAG INTEGER,
	-- bool
	DEW_POINT_FLAG INTEGER,
	-- bool
	WIND_DIRECTION_FLAG INTEGER,
	-- bool
	WIND_SPEED_FLAG INTEGER,
	FOREIGN KEY (ANTENNA_ID)
	REFERENCES ANTENNA (ANTENNA_ID)
);



/* Create Indexes */

CREATE INDEX IDX_POINTING_TIME ON POINTING (TIME);



